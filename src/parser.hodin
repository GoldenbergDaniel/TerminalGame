package main

BUF_SIZE :: rt.MIB
TOKEN_CAP :: 2000

// @Test /////////////////////////////////////////////////////////////////////////////////

test_parser :: proc()

// @Token //////////////////////////////////////////////////////////////////////////////// 

Token :: struct
{
  type : TokenType,
  str : string,
}

TokenList :: struct
{
  arena : ^rt.Arena,
  data : [^]Token,
  cap : int,
  count : int,
}

TokenType :: enum
{
  NONE,
  STRING,
  NUMBER,
  BOOLEAN,
  COLON,
  BRACE_OPEN,
  BRACE_CLOSED,
  BRACKET_OPEN,
  BRACKET_CLOSED,
}

push_token :: proc(list: ^TokenList, s: string, t: TokenType)

// @Lexer ////////////////////////////////////////////////////////////////////////////////

tokens_from_json_at_path :: proc(path: string, arena: ^rt.Arena) -> TokenList

// @Parser ///////////////////////////////////////////////////////////////////////////////

items_from_tokens :: proc(tokens: TokenList, arena: ^rt.Arena) -> ItemStore

// @Imports //////////////////////////////////////////////////////////////////////////////

import fmt "core:fmt"
import os "core:os"
import str "core:strings"
import strconv "core:strconv"

import rt "root"
import tests "tests"
